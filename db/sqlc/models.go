// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package sqlc

import (
	"net/netip"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Authentication struct {
	ID                  uuid.UUID          `json:"id"`
	Email               string             `json:"email"`
	Phone               pgtype.Text        `json:"phone"`
	Username            pgtype.Text        `json:"username"`
	PasswordHash        string             `json:"password_hash"`
	CreatedAt           pgtype.Timestamptz `json:"created_at"`
	UpdatedAt           pgtype.Timestamptz `json:"updated_at"`
	IsSuspended         pgtype.Bool        `json:"is_suspended"`
	IsDeleted           pgtype.Bool        `json:"is_deleted"`
	IsVerified          pgtype.Bool        `json:"is_verified"`
	IsEmailVerified     pgtype.Bool        `json:"is_email_verified"`
	DeletedAt           pgtype.Timestamptz `json:"deleted_at"`
	VerifiedAt          pgtype.Timestamptz `json:"verified_at"`
	SuspendedAt         pgtype.Timestamptz `json:"suspended_at"`
	LoginAttempts       pgtype.Int4        `json:"login_attempts"`
	PasswordLastChanged pgtype.Timestamptz `json:"password_last_changed"`
	LockoutDuration     pgtype.Int4        `json:"lockout_duration"`
	LockoutUntil        pgtype.Timestamptz `json:"lockout_until"`
	IsMfaEnabled        pgtype.Bool        `json:"is_mfa_enabled"`
}

type EmailVerificationRequest struct {
	ID         int64              `json:"id"`
	UserID     uuid.UUID          `json:"user_id"`
	Email      string             `json:"email"`
	Token      string             `json:"token"`
	IsVerified pgtype.Bool        `json:"is_verified"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	ExpiresAt  time.Time          `json:"expires_at"`
}

type Role struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}

type Session struct {
	ID              uuid.UUID          `json:"id"`
	UserID          uuid.UUID          `json:"user_id"`
	RefreshToken    string             `json:"refresh_token"`
	RefreshTokenExp time.Time          `json:"refresh_token_exp"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `json:"updated_at"`
	InvalidatedAt   pgtype.Timestamptz `json:"invalidated_at"`
	LastActiveAt    pgtype.Timestamptz `json:"last_active_at"`
	BlockedAt       pgtype.Timestamptz `json:"blocked_at"`
	UserAgent       string             `json:"user_agent"`
	IpAddress       netip.Addr         `json:"ip_address"`
	FcmToken        pgtype.Text        `json:"fcm_token"`
}

type User struct {
	ID        int32       `json:"id"`
	UserID    uuid.UUID   `json:"user_id"`
	FirstName pgtype.Text `json:"first_name"`
	LastName  pgtype.Text `json:"last_name"`
	ImageUrl  pgtype.Text `json:"image_url"`
}

type UserLogin struct {
	ID        int32              `json:"id"`
	UserID    uuid.UUID          `json:"user_id"`
	LoginAt   pgtype.Timestamptz `json:"login_at"`
	IpAddress *netip.Addr        `json:"ip_address"`
	UserAgent pgtype.Text        `json:"user_agent"`
}

type UserRole struct {
	ID     int32     `json:"id"`
	UserID uuid.UUID `json:"user_id"`
	RoleID int32     `json:"role_id"`
}
